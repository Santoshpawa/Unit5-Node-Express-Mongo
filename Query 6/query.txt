// 1. List of books borrowed by each borrower
db.loans.aggregate([
  {
    $lookup: {
      from: "books",
      localField: "bookId",
      foreignField: "_id",
      as: "bookDetails"
    }
  },
  { $unwind: "$bookDetails" },
  {
    $group: {
      _id: "$borrowerId",
      booksBorrowed: { $push: "$bookDetails.title" }
    }
  }
]);

// 2. Top 3 most borrowed books
db.loans.aggregate([
  {
    $group: {
      _id: "$bookId",
      borrowCount: { $sum: 1 }
    }
  },
  { $sort: { borrowCount: -1 } },
  { $limit: 3 }
]);

// 3. Borrowerâ€™s loan history with book details (borrowerId = User1)
db.loans.aggregate([
  { $match: { borrowerId: "User1" } },
  {
    $lookup: {
      from: "books",
      localField: "bookId",
      foreignField: "_id",
      as: "bookDetails"
    }
  },
  { $unwind: "$bookDetails" }
]);

// 4. Borrowers who have borrowed more than 2 books
db.loans.aggregate([
  {
    $group: {
      _id: "$borrowerId",
      totalLoans: { $sum: 1 }
    }
  },
  { $match: { totalLoans: { $gt: 2 } } }
]);

// 5. Full report of all loans (with borrower name and book title)
db.loans.aggregate([
  {
    $lookup: {
      from: "borrowers",
      localField: "borrowerId",
      foreignField: "_id",
      as: "borrowerDetails"
    }
  },
  { $unwind: "$borrowerDetails" },
  {
    $lookup: {
      from: "books",
      localField: "bookId",
      foreignField: "_id",
      as: "bookDetails"
    }
  },
  { $unwind: "$bookDetails" },
  {
    $project: {
      _id: 0,
      borrower: "$borrowerDetails.name",
      book: "$bookDetails.title",
      status: 1,
      loanDate: 1,
      returnDate: 1
    }
  }
]);

// 6. Genre-wise count of borrowed books
db.loans.aggregate([
  {
    $lookup: {
      from: "books",
      localField: "bookId",
      foreignField: "_id",
      as: "bookDetails"
    }
  },
  { $unwind: "$bookDetails" },
  {
    $group: {
      _id: "$bookDetails.genre",
      totalBorrowed: { $sum: 1 }
    }
  }
]);

// 7. Current borrowed books (status = "Borrowed") with borrower and book title
db.loans.aggregate([
  { $match: { status: "Borrowed" } },
  {
    $lookup: {
      from: "borrowers",
      localField: "borrowerId",
      foreignField: "_id",
      as: "borrowerDetails"
    }
  },
  { $unwind: "$borrowerDetails" },
  {
    $lookup: {
      from: "books",
      localField: "bookId",
      foreignField: "_id",
      as: "bookDetails"
    }
  },
  { $unwind: "$bookDetails" },
  {
    $project: {
      _id: 0,
      borrower: "$borrowerDetails.name",
      book: "$bookDetails.title",
      loanDate: 1
    }
  }
]);

// 8. Number of returned books per borrower
db.loans.aggregate([
  { $match: { status: "Returned" } },
  {
    $group: {
      _id: "$borrowerId",
      returnedCount: { $sum: 1 }
    }
  }
]);

// 9. Borrowers who borrowed multiple genres
db.loans.aggregate([
  {
    $lookup: {
      from: "books",
      localField: "bookId",
      foreignField: "_id",
      as: "bookDetails"
    }
  },
  { $unwind: "$bookDetails" },
  {
    $group: {
      _id: "$borrowerId",
      genres: { $addToSet: "$bookDetails.genre" }
    }
  },
  { $match: { "genres.1": { $exists: true } } }
]);

// 10. List borrowers with total borrow count and names
db.loans.aggregate([
  {
    $group: {
      _id: "$borrowerId",
      totalLoans: { $sum: 1 }
    }
  },
  {
    $lookup: {
      from: "borrowers",
      localField: "_id",
      foreignField: "_id",
      as: "borrowerDetails"
    }
  },
  { $unwind: "$borrowerDetails" },
  {
    $project: {
      _id: 0,
      borrower: "$borrowerDetails.name",
      totalLoans: 1
    }
  }
]);
